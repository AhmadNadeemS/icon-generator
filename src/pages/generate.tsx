import { NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import React, { useState } from "react";
import FormGroup from "~/components/FormGroup";
import Button from "~/components//Button";
import Input from "~/components/input";
import { api } from "~/utils/api";
import Image from "next/image";
import { useBuyCredits } from "~/hooks/useBuyCredits";

const colors = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
];

const shapes = ["square", "circle", "rounded"];

const GeneratePage: NextPage = () => {
  const [imageUrl, setImageUrl] = useState("");
  const [form, setForm] = useState({
    prompt: "",
    color: "",
    shape: "",
  });

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });
  const handleFormSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    await generateIcon.mutate({
      // prompt: form.prompt,
      ...form,
    });
    setForm((prev) => ({ ...prev, prompt: "" }));
  };

  const updateForm = (key: string) => {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value,
      }));
    };
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 flex min-h-screen flex-col">
        <h1 className="text-6xl">Generate your icons</h1>
        <p className="mb-12 text-2xl">
          Fill out the form below to start generating your icons.
        </p>
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
          <h2 className="text-xl">
            1. Describe what your want your icon to look like.
          </h2>
          <FormGroup>
            <label htmlFor="">Prompt</label>
            <Input
              required
              onChange={updateForm("prompt")}
              value={form.prompt}
            />
          </FormGroup>
          <h2 className="text-xl">2. Pick your icon color.</h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {colors.map((color) => (
              <label key={color} className="flex gap-4 text-2xl">
                <Input
                  type="radio"
                  value={color}
                  checked={form.color === color}
                  onChange={() => setForm((prev) => ({ ...prev, color }))}
                />
                {color}
              </label>
            ))}
          </FormGroup>

          <h2 className="text-xl">3. Pick your icon shape.</h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {shapes.map((shape) => (
              <label key={shape} className="flex gap-2 text-2xl">
                <Input
                  type="radio"
                  name="shape"
                  checked={shape === form.shape}
                  onChange={() => setForm((prev) => ({ ...prev, shape }))}
                ></Input>
                {shape}
              </label>
            ))}
          </FormGroup>

          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
          >
            Submit
          </Button>
          {imageUrl.length > 0 && (
            <>
            <h2>Your Icons</h2>
            <section className="grid grid-cols-4 gap-4">
              <Image  className="w-full" src={imageUrl} width={100} height={100}  alt="icon"/>
            </section>
            </>
          )}
        </form>
      </main>
    </>
  );
};

export default GeneratePage;
